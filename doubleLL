#include<stdio.h>
#include<stdlib.h>
typedef struct Node
{
    int data;
    struct Node* next;
    struct Node* prev;
}Node;
Node* head=NULL;
Node* tail=NULL;
void create(){
    while(1){
    Node* new=(Node*)malloc(sizeof(Node));
    char cha;
    printf("Enter data:");
    scanf("%d",&new->data);
    new->next=NULL;
    new->prev=NULL;
    if(head==NULL){
        head=new;
        tail=new;
    }
    else{
        tail->next=new;
        new->prev=tail;
        tail=new;
    }
  
    printf("insert another node? (y/n):");
    scanf(" %c", &cha);
    if(cha!='y' && cha!='Y') break;
    }
    
}

void display(){
    if(head==NULL){
        printf("empty LinkedList\n");
        return;
    }
    Node* temp=head;
    printf("LinkedList content: ");
    while(temp){
        printf("%d\t",temp->data);
        temp=temp->next;
    }
    printf("NULL\n");
}
void insertatbeginning(){
    Node* new=(Node*)malloc(sizeof(Node));
    printf("Enter data:");
    scanf("%d",&new->data);
    new->next=NULL;
    new->prev=NULL;
    if(head==NULL){
        head=new;
        return;
    }
    else{
        new->next=head;
        head->prev=new;
        head=new;
        return;
    }
}

void deleteelement(int p){
    if(head==NULL){
        printf("empty LinkedList\n");
        return;
    }
    if(head->data==p){
        Node* temp=head;
        head=head->next;
        head->prev=NULL;
        free(temp);
        return;
    }
    Node* temp=head;
    while(temp->next){
        if(temp->next->data==p){
            Node* temp2=temp->next;
            temp->next=temp2->next;
            temp2->next->prev=temp;
            free(temp2);
            return;
        }
        temp=temp->next;
    }
    printf("Element not found\n");
    return;
}

int main(){
    printf("1-create,2-insertatbeginning,3-deletelement,4-display,5-exit\n");
    int ch;
    while(1){
        printf("Enter choice:");
        scanf("%d",&ch);
        switch(ch){
        case 1:
            create();
            break;

        case 2:
           insertatbeginning();
            break;
        case 3:
            printf("Enter element to delete:");
            int p;
            scanf("%d",&p);
            deleteelement(p);
            break;
        case 4:
            display();
            break;
        case 5:
            exit(0);
        }

    }

    return 0;
}

o/p

  1-create,2-insertatbeginning,3-deletelement,4-display,5-exit
Enter choice: 1
Enter data: 10
insert another node? (y/n): y
Enter data: 20
insert another node? (y/n): y
Enter data: 30
insert another node? (y/n): n

LinkedList content: 10    20    30    NULL

Enter choice: 2
Enter data: 5

LinkedList content: 5    10    20    30    NULL

Enter choice: 3
Enter element to delete: 20

LinkedList content: 5    10    30    NULL
